services:
    frontend:
        build:
            context: ./frontend
            dockerfile: ../docker/frontend/Dockerfile
        container_name: frontend
        environment:
            CHOKIDAR_USEPOLLING: 'true'
            NODE_ENV: dev
        entrypoint: "sh -c 'npm install && ng serve --host 0.0.0.0 --poll 50'"
        depends_on:
            - backend
        networks:
            - fullstack
        ports:
            - '6500:4200'
            - '49153:49153'
        volumes:
            - './frontend:/app:cached'

    backend:
        build:
            context: .
            dockerfile: docker/backend/Dockerfile
        image: backend
        container_name: backend
        restart: unless-stopped
        ports:
            - '6501:6501'
            - '35729:35729'
        networks:
            - fullstack
        depends_on:
            - posgres_database
        volumes:
            - ./backend:/app:cached

    posgres_database:
        image: postgres:17-alpine
        restart: always
        container_name: posgres_database
        ports:
          - 6600:5432
        environment:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        networks:
            - fullstack

    database_manager:
      image: dpage/pgadmin4:8.12
      container_name: database_manager
      environment:
        PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
        PGADMIN_DEFAULT_PASSWORD: password
        PGADMIN_LISTEN_PORT: 80
      ports:
        - 6503:80
      depends_on:
        - posgres_database
      networks:
        - fullstack

networks:
   fullstack:
        name: fullstack
        driver: bridge

volumes:
    fullstack_database-data:
        name: fullstack_database-data

  
